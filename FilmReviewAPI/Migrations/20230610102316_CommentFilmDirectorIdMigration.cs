using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace FilmReviewAPI.Migrations
{
    public partial class CommentFilmDirectorIdMigration : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 170, 51, 244, 183, 219, 137, 93, 61, 194, 246, 223, 137, 217, 192, 111, 202, 110, 0, 70, 28, 108, 201, 63, 114, 59, 43, 240, 255, 198, 56, 126, 244, 175, 80, 142, 185, 60, 235, 47, 120, 5, 55, 169, 217, 108, 168, 224, 108, 38, 55, 20, 235, 204, 127, 107, 22, 19, 48, 167, 92, 219, 173, 210, 213 }, new byte[] { 54, 158, 77, 250, 53, 146, 55, 94, 53, 211, 173, 96, 152, 178, 133, 89, 119, 84, 128, 153, 219, 63, 246, 225, 117, 254, 106, 36, 171, 183, 115, 137, 34, 38, 220, 192, 140, 110, 133, 167, 38, 212, 252, 123, 3, 35, 115, 211, 150, 211, 223, 33, 223, 167, 230, 56, 164, 97, 123, 3, 199, 88, 10, 46, 173, 243, 219, 203, 170, 22, 166, 91, 219, 0, 115, 254, 149, 113, 58, 174, 199, 174, 66, 130, 133, 195, 102, 220, 69, 61, 15, 223, 39, 120, 45, 166, 248, 219, 6, 179, 185, 251, 221, 134, 67, 62, 138, 59, 31, 197, 124, 183, 133, 231, 139, 210, 197, 219, 161, 18, 140, 49, 156, 129, 72, 177, 69, 35 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 187, 76, 160, 41, 10, 250, 36, 251, 49, 2, 176, 99, 15, 226, 240, 204, 201, 23, 223, 228, 168, 74, 42, 169, 76, 51, 235, 113, 64, 87, 56, 241, 33, 1, 121, 31, 155, 189, 121, 40, 12, 51, 49, 173, 74, 8, 171, 48, 163, 149, 45, 19, 179, 162, 58, 159, 82, 18, 194, 10, 9, 154, 155, 163 }, new byte[] { 140, 120, 236, 29, 60, 107, 30, 210, 156, 45, 137, 214, 9, 194, 101, 153, 44, 74, 24, 252, 101, 199, 221, 18, 242, 3, 70, 216, 79, 239, 219, 53, 126, 220, 153, 64, 51, 40, 64, 43, 229, 239, 151, 153, 63, 105, 192, 55, 144, 160, 213, 72, 71, 59, 96, 171, 100, 226, 188, 78, 86, 143, 220, 19, 104, 94, 237, 214, 25, 20, 89, 236, 156, 169, 184, 76, 43, 121, 17, 8, 4, 88, 127, 29, 29, 112, 26, 228, 9, 17, 4, 6, 251, 215, 196, 249, 91, 36, 172, 253, 58, 105, 249, 14, 81, 253, 140, 10, 80, 159, 179, 214, 236, 110, 166, 165, 229, 125, 135, 51, 223, 102, 178, 89, 177, 12, 34, 228 } });
        }
    }
}
